<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.driving</groupId>
	<artifactId>planning-client-api</artifactId>
	<packaging>jar</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>planning-client-api</name>
	<url>https://maven.apache.org</url>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.1.RELEASE</version>
	</parent>
	<build>
		<extensions>
			<extension>
				<groupId>com.google.cloud.artifactregistry</groupId>
				<artifactId>artifactregistry-maven-wagon</artifactId>
				<version>2.1.4</version>
			</extension>
		</extensions>
		<plugins>
			<!-- activate the plugin -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<!-- RELEASE_VERSION -->
				<version>5.2.1</version>
				<!-- /RELEASE_VERSION -->
				<executions>
					<execution>
						<id>spring-server</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<!-- specify the swagger yaml -->
							<inputSpec>http://localhost:8080/swagger</inputSpec>

							<!-- target to generate java client code -->
							<generatorName>spring</generatorName>

							<!-- hint: if you want to generate java server code, e.g. based on Spring Boot,
								 you can use the following target: <generatorName>spring</generatorName> -->
							<enablePostProcessFile>true</enablePostProcessFile>
							<removeOperationIdPrefix>true</removeOperationIdPrefix>
							<enablePostProcessFile>true</enablePostProcessFile>
							<!-- pass any necessary config options -->
							<groupId>com.driving.planning</groupId>
							<artifactId>planning-client</artifactId>
							<artifactVersion>${project.version}</artifactVersion>
							<apiPackage>com.driving.planning.client</apiPackage>
							<modelPackage>com.driving.planning.client.model</modelPackage>
							<invokerPackage>com.driving.planning.client.api</invokerPackage>
							<configOptions>
								<configPackage>com.driving.planning.client.config</configPackage>
								<dateLibrary>java8</dateLibrary>
								<library>spring-cloud</library>
								<performBeanValidation>false</performBeanValidation>
								<useBeanValidation>false</useBeanValidation>
							</configOptions>
							<importMappings>
								<typeMapping>LocalTime=java.time.LocalTime</typeMapping>
								<typeMapping>LocalDate=java.time.LocalDate</typeMapping>
							</importMappings>
						</configuration>
					</execution>

				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<proc>none</proc>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
		</pluginManagement>
	</build>
	<pluginRepositories>
		<pluginRepository>
			<id>sonatype-snapshots</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<distributionManagement>
		<snapshotRepository>
			<id>artifact-registry</id>
			<url>artifactregistry://europe-west1-maven.pkg.dev/driving-monlabo-biz/auto</url>
		</snapshotRepository>
		<repository>
			<id>artifact-registry</id>
			<url>artifactregistry://europe-west1-maven.pkg.dev/driving-monlabo-biz/auto</url>
		</repository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>gcp-driving-repo</id>
			<url>artifactregistry://europe-west1-maven.pkg.dev/driving-monlabo-biz/auto</url>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>always</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<dependencies>
		<!-- dependencies are needed for the client being generated -->

		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger-annotations-version}</version>
		</dependency>

		<!-- You can find the dependencies for the library configuration you chose by looking in JavaClientCodegen.
			 Then find the corresponding dependency on Maven Central, and set the versions in the property section below -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.2.11</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>0.1.0</version>
		</dependency>
		<!-- Bean Validation API support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
	</dependencies>

	<properties>
		<swagger-annotations-version>1.5.8</swagger-annotations-version>
		<spring-cloud.version>2020.0.4</spring-cloud.version>
		<spring-boot-starter-web.version>2.2.1.RELEASE</spring-boot-starter-web.version>
		<springfox-version>2.8.0</springfox-version>
	</properties>
</project>